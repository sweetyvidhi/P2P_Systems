%!PS-Adobe-2.0 EPSF-2.0
%%Title: temp.ps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Jul 26 16:05:41 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (temp.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (vidya)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 26 16:05:41 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
1140 400 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1140 1133 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 1133 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.0005)]
] -66.7 MRshow
1.000 UL
LTb
1140 1866 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.001)]
] -66.7 MRshow
1.000 UL
LTb
1140 2599 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 2599 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.0015)]
] -66.7 MRshow
1.000 UL
LTb
1140 3333 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 3333 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.002)]
] -66.7 MRshow
1.000 UL
LTb
1140 4066 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 4066 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.0025)]
] -66.7 MRshow
1.000 UL
LTb
1140 4799 M
63 0 V
5636 0 R
-63 0 V
stroke
1020 4799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.003)]
] -66.7 MRshow
1.000 UL
LTb
1140 400 M
0 63 V
0 4336 R
0 -63 V
stroke
1140 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
1710 400 M
0 63 V
0 4336 R
0 -63 V
stroke
1710 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
2280 400 M
0 63 V
0 4336 R
0 -63 V
stroke
2280 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MCshow
1.000 UL
LTb
2850 400 M
0 63 V
0 4336 R
0 -63 V
stroke
2850 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
3420 400 M
0 63 V
0 4336 R
0 -63 V
stroke
3420 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MCshow
1.000 UL
LTb
3990 400 M
0 63 V
0 4336 R
0 -63 V
stroke
3990 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
4559 400 M
0 63 V
0 4336 R
0 -63 V
stroke
4559 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 35)]
] -66.7 MCshow
1.000 UL
LTb
5129 400 M
0 63 V
0 4336 R
0 -63 V
stroke
5129 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
5699 400 M
0 63 V
0 4336 R
0 -63 V
stroke
5699 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 45)]
] -66.7 MCshow
1.000 UL
LTb
6269 400 M
0 63 V
0 4336 R
0 -63 V
stroke
6269 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
6839 400 M
0 63 V
0 4336 R
0 -63 V
stroke
6839 200 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 55)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1140 4799 N
0 -4399 V
5699 0 V
0 4399 V
-5699 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
3.000 UL
LT0
/Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5936 4636 M
('./accuracy' using \($2+0.8*rand\(0\)\):4) Rshow
LT0
6327 4636 Pnt
1154 582 Pnt
1201 500 Pnt
1214 609 Pnt
1200 563 Pnt
1212 536 Pnt
1216 825 Pnt
1167 497 Pnt
1193 748 Pnt
1194 648 Pnt
1146 456 Pnt
1152 670 Pnt
1208 523 Pnt
1142 562 Pnt
1167 498 Pnt
1165 710 Pnt
1179 585 Pnt
1206 445 Pnt
1199 652 Pnt
1184 764 Pnt
1214 431 Pnt
1213 677 Pnt
1141 509 Pnt
1150 962 Pnt
1167 486 Pnt
1229 737 Pnt
1174 494 Pnt
1226 597 Pnt
1195 543 Pnt
1176 464 Pnt
1148 523 Pnt
1205 841 Pnt
1183 682 Pnt
1177 502 Pnt
1198 1032 Pnt
1195 802 Pnt
1160 1044 Pnt
1216 623 Pnt
1170 783 Pnt
1152 473 Pnt
1205 702 Pnt
1172 864 Pnt
1215 693 Pnt
1143 528 Pnt
1206 461 Pnt
1214 558 Pnt
1216 605 Pnt
1191 445 Pnt
1217 409 Pnt
1220 473 Pnt
1216 491 Pnt
1204 882 Pnt
1173 643 Pnt
1173 471 Pnt
1184 537 Pnt
1165 456 Pnt
1180 490 Pnt
1224 451 Pnt
1148 553 Pnt
1165 740 Pnt
1151 530 Pnt
1213 548 Pnt
1154 441 Pnt
1180 536 Pnt
1201 640 Pnt
1192 877 Pnt
1221 459 Pnt
1202 451 Pnt
1154 578 Pnt
1169 548 Pnt
1199 465 Pnt
1213 549 Pnt
1216 551 Pnt
1163 713 Pnt
1229 625 Pnt
1161 517 Pnt
1219 401 Pnt
1154 645 Pnt
1196 495 Pnt
1159 590 Pnt
1224 459 Pnt
1226 515 Pnt
1152 989 Pnt
1146 537 Pnt
1159 879 Pnt
1199 645 Pnt
1162 472 Pnt
1210 601 Pnt
1147 414 Pnt
1203 449 Pnt
1194 662 Pnt
1185 440 Pnt
1163 739 Pnt
1215 698 Pnt
1223 491 Pnt
1192 529 Pnt
1200 423 Pnt
1221 830 Pnt
1151 554 Pnt
1169 438 Pnt
1217 568 Pnt
1742 726 Pnt
1790 705 Pnt
1741 807 Pnt
1711 480 Pnt
1734 473 Pnt
1759 868 Pnt
1760 803 Pnt
1784 770 Pnt
1795 466 Pnt
1763 425 Pnt
1722 740 Pnt
1738 689 Pnt
1800 494 Pnt
1742 415 Pnt
1716 497 Pnt
1727 712 Pnt
1779 529 Pnt
1717 796 Pnt
1753 464 Pnt
1800 428 Pnt
1767 532 Pnt
1793 720 Pnt
1723 519 Pnt
1724 413 Pnt
1774 880 Pnt
1730 568 Pnt
1749 820 Pnt
1752 632 Pnt
1738 426 Pnt
1759 761 Pnt
1719 692 Pnt
1789 564 Pnt
1793 434 Pnt
1729 942 Pnt
1744 701 Pnt
1739 980 Pnt
1727 409 Pnt
1786 628 Pnt
1798 983 Pnt
1723 571 Pnt
1740 816 Pnt
1773 760 Pnt
1779 540 Pnt
1731 727 Pnt
1738 783 Pnt
1777 502 Pnt
1729 692 Pnt
1794 473 Pnt
1800 448 Pnt
1745 724 Pnt
1715 1028 Pnt
1713 541 Pnt
1713 731 Pnt
1724 725 Pnt
1741 845 Pnt
1783 570 Pnt
1745 819 Pnt
1765 651 Pnt
1761 995 Pnt
1777 467 Pnt
1798 592 Pnt
1746 812 Pnt
1761 468 Pnt
1795 611 Pnt
1740 660 Pnt
1742 472 Pnt
1742 551 Pnt
1781 661 Pnt
1759 444 Pnt
1716 513 Pnt
1798 466 Pnt
1725 635 Pnt
1759 563 Pnt
1793 762 Pnt
1732 508 Pnt
1771 816 Pnt
1731 731 Pnt
1798 750 Pnt
1758 627 Pnt
1756 614 Pnt
1730 481 Pnt
1779 866 Pnt
1796 621 Pnt
1717 916 Pnt
1721 1444 Pnt
1788 671 Pnt
1717 1072 Pnt
1721 441 Pnt
1712 449 Pnt
1712 668 Pnt
1728 665 Pnt
1722 644 Pnt
1793 1024 Pnt
1731 775 Pnt
1797 510 Pnt
1724 504 Pnt
1746 678 Pnt
1731 648 Pnt
1785 682 Pnt
1780 633 Pnt
2368 489 Pnt
2347 1140 Pnt
2290 844 Pnt
2328 799 Pnt
2363 665 Pnt
2297 425 Pnt
2304 943 Pnt
2317 634 Pnt
2313 650 Pnt
2289 412 Pnt
2324 477 Pnt
2289 512 Pnt
2323 701 Pnt
2324 869 Pnt
2282 887 Pnt
2289 465 Pnt
2337 601 Pnt
2303 572 Pnt
2348 535 Pnt
2335 638 Pnt
2322 978 Pnt
2328 622 Pnt
2325 411 Pnt
2368 757 Pnt
2305 648 Pnt
2315 435 Pnt
2283 852 Pnt
2309 667 Pnt
2292 566 Pnt
2366 822 Pnt
2319 629 Pnt
2304 1345 Pnt
2301 877 Pnt
2334 956 Pnt
2318 482 Pnt
2336 936 Pnt
2314 795 Pnt
2297 1232 Pnt
2357 489 Pnt
2359 995 Pnt
2369 954 Pnt
2317 480 Pnt
2344 658 Pnt
2333 629 Pnt
2284 833 Pnt
2300 1086 Pnt
2317 597 Pnt
2293 472 Pnt
2300 571 Pnt
2318 549 Pnt
2360 567 Pnt
2289 476 Pnt
2330 774 Pnt
2289 429 Pnt
2311 785 Pnt
2363 413 Pnt
2332 522 Pnt
2296 872 Pnt
2318 1209 Pnt
2330 1493 Pnt
2370 814 Pnt
2288 784 Pnt
2363 504 Pnt
2364 823 Pnt
2280 912 Pnt
2316 1029 Pnt
2338 590 Pnt
2287 502 Pnt
2294 655 Pnt
2296 585 Pnt
2291 571 Pnt
2300 679 Pnt
2344 502 Pnt
2321 497 Pnt
2360 752 Pnt
2344 515 Pnt
2280 1178 Pnt
2287 1537 Pnt
2315 789 Pnt
2328 636 Pnt
2369 780 Pnt
2282 992 Pnt
2355 896 Pnt
2326 467 Pnt
2293 1309 Pnt
2321 721 Pnt
2352 778 Pnt
2355 1113 Pnt
2354 757 Pnt
2296 1230 Pnt
2330 784 Pnt
2305 780 Pnt
2305 568 Pnt
2299 1342 Pnt
2322 412 Pnt
2311 414 Pnt
2335 882 Pnt
2351 1176 Pnt
2302 415 Pnt
2339 877 Pnt
2929 840 Pnt
2940 1203 Pnt
2913 791 Pnt
2916 512 Pnt
2894 475 Pnt
2921 1282 Pnt
2880 621 Pnt
2851 1655 Pnt
2851 969 Pnt
2854 771 Pnt
2936 1567 Pnt
2857 701 Pnt
2901 943 Pnt
2869 783 Pnt
2934 1257 Pnt
2879 1110 Pnt
2857 415 Pnt
2889 418 Pnt
2861 1049 Pnt
2911 807 Pnt
2853 720 Pnt
2931 902 Pnt
2918 1133 Pnt
2936 503 Pnt
2888 867 Pnt
2908 1532 Pnt
2907 755 Pnt
2931 1376 Pnt
2857 608 Pnt
2872 432 Pnt
2855 684 Pnt
2863 1338 Pnt
2941 1240 Pnt
2862 1351 Pnt
2915 703 Pnt
2920 694 Pnt
2901 753 Pnt
2900 855 Pnt
2922 534 Pnt
2925 1099 Pnt
2861 416 Pnt
2859 617 Pnt
2910 756 Pnt
2915 428 Pnt
2863 443 Pnt
2897 876 Pnt
2851 521 Pnt
2864 869 Pnt
2924 464 Pnt
2936 597 Pnt
2930 438 Pnt
2914 732 Pnt
2856 862 Pnt
2868 934 Pnt
2881 585 Pnt
2919 1303 Pnt
2869 2156 Pnt
2858 515 Pnt
2882 616 Pnt
2855 1783 Pnt
2853 998 Pnt
2911 851 Pnt
2923 573 Pnt
2914 645 Pnt
2933 1036 Pnt
2873 502 Pnt
2863 909 Pnt
2884 552 Pnt
2920 1370 Pnt
2874 943 Pnt
2919 802 Pnt
2902 697 Pnt
2939 776 Pnt
2914 1040 Pnt
2895 468 Pnt
2878 771 Pnt
2876 485 Pnt
2895 615 Pnt
2875 768 Pnt
2906 948 Pnt
2921 903 Pnt
2885 1256 Pnt
2857 1303 Pnt
2850 1260 Pnt
2889 1029 Pnt
2869 507 Pnt
2934 1138 Pnt
2920 1360 Pnt
2921 589 Pnt
2878 579 Pnt
2928 889 Pnt
2922 1052 Pnt
2895 567 Pnt
2862 494 Pnt
2850 782 Pnt
2881 666 Pnt
2935 602 Pnt
2893 549 Pnt
2933 1242 Pnt
3438 1110 Pnt
2867 462 Pnt
3465 1271 Pnt
3429 1110 Pnt
3445 1271 Pnt
3483 1787 Pnt
3438 963 Pnt
3479 1416 Pnt
3421 1951 Pnt
3454 1302 Pnt
3464 1190 Pnt
3430 840 Pnt
3452 584 Pnt
3461 1157 Pnt
3482 559 Pnt
3466 634 Pnt
3441 1484 Pnt
3434 545 Pnt
3448 1831 Pnt
3442 535 Pnt
3495 480 Pnt
3481 1056 Pnt
3420 960 Pnt
3493 615 Pnt
3464 868 Pnt
3494 1044 Pnt
3476 467 Pnt
3440 409 Pnt
3473 1463 Pnt
3490 476 Pnt
3493 1142 Pnt
3496 725 Pnt
3477 599 Pnt
3461 444 Pnt
3460 1759 Pnt
3495 455 Pnt
3502 831 Pnt
3483 979 Pnt
3428 1234 Pnt
3480 1595 Pnt
3440 1170 Pnt
3478 878 Pnt
3487 975 Pnt
3473 405 Pnt
3428 777 Pnt
3446 815 Pnt
3438 1098 Pnt
3494 740 Pnt
3453 435 Pnt
3509 619 Pnt
3473 1274 Pnt
3502 587 Pnt
3449 707 Pnt
3428 1495 Pnt
3502 525 Pnt
3433 723 Pnt
3508 1287 Pnt
3429 951 Pnt
3459 548 Pnt
3448 1198 Pnt
3444 736 Pnt
3510 452 Pnt
3477 1112 Pnt
3436 1351 Pnt
3468 1078 Pnt
3458 1040 Pnt
3486 491 Pnt
3479 766 Pnt
3497 727 Pnt
3488 709 Pnt
3467 1142 Pnt
3509 1075 Pnt
3478 1686 Pnt
3492 566 Pnt
3421 770 Pnt
3485 599 Pnt
3439 691 Pnt
3453 474 Pnt
3434 1015 Pnt
3426 765 Pnt
3486 1598 Pnt
3490 599 Pnt
3495 718 Pnt
3509 612 Pnt
3434 1624 Pnt
3457 1175 Pnt
3422 1314 Pnt
3503 900 Pnt
3469 1299 Pnt
3481 1127 Pnt
3501 1350 Pnt
3503 725 Pnt
3478 717 Pnt
3499 852 Pnt
3476 824 Pnt
3423 495 Pnt
3510 545 Pnt
3471 637 Pnt
3509 510 Pnt
3461 849 Pnt
3468 1262 Pnt
3451 830 Pnt
3484 696 Pnt
4072 738 Pnt
4031 1718 Pnt
3998 1087 Pnt
4072 721 Pnt
4054 740 Pnt
4030 1653 Pnt
4030 1078 Pnt
4005 989 Pnt
4046 846 Pnt
4014 416 Pnt
3996 741 Pnt
4066 1509 Pnt
4077 614 Pnt
4000 717 Pnt
4065 572 Pnt
4065 1368 Pnt
4016 1032 Pnt
4059 1444 Pnt
4000 1129 Pnt
4075 998 Pnt
4016 1078 Pnt
3999 847 Pnt
4018 1439 Pnt
4064 573 Pnt
4026 509 Pnt
4028 767 Pnt
4075 834 Pnt
4070 1447 Pnt
4045 934 Pnt
4017 863 Pnt
4016 660 Pnt
4030 1044 Pnt
4031 844 Pnt
4048 1133 Pnt
4068 1510 Pnt
4053 2273 Pnt
4025 1055 Pnt
4019 1385 Pnt
4067 652 Pnt
4015 589 Pnt
4079 505 Pnt
4070 951 Pnt
4025 556 Pnt
4063 971 Pnt
4027 414 Pnt
4020 559 Pnt
4079 1282 Pnt
4006 871 Pnt
3995 924 Pnt
4043 476 Pnt
4066 464 Pnt
4044 1013 Pnt
3993 573 Pnt
4023 584 Pnt
4038 1290 Pnt
4023 569 Pnt
4067 778 Pnt
4079 540 Pnt
4029 1046 Pnt
4039 1172 Pnt
4054 977 Pnt
4068 803 Pnt
4015 1565 Pnt
4061 401 Pnt
4044 1074 Pnt
4065 463 Pnt
4041 726 Pnt
4021 770 Pnt
4001 567 Pnt
4004 1567 Pnt
4014 886 Pnt
4050 1727 Pnt
4017 702 Pnt
4077 755 Pnt
4011 1062 Pnt
3997 981 Pnt
4034 982 Pnt
4030 428 Pnt
4074 591 Pnt
3994 912 Pnt
4001 2348 Pnt
4077 1476 Pnt
4080 1311 Pnt
3994 1021 Pnt
3990 491 Pnt
4003 575 Pnt
4064 1947 Pnt
4072 1004 Pnt
4067 655 Pnt
4005 535 Pnt
4049 1046 Pnt
3999 761 Pnt
4040 541 Pnt
4013 1881 Pnt
4010 615 Pnt
4058 422 Pnt
4023 556 Pnt
4040 913 Pnt
4018 1407 Pnt
4062 1822 Pnt
4641 1349 Pnt
4598 1389 Pnt
4622 738 Pnt
4569 1010 Pnt
4649 828 Pnt
4567 1560 Pnt
4589 1202 Pnt
4608 1860 Pnt
4628 1962 Pnt
4599 531 Pnt
4633 1400 Pnt
4650 626 Pnt
4645 608 Pnt
4592 960 Pnt
4611 2085 Pnt
4637 708 Pnt
4638 1469 Pnt
4581 1590 Pnt
4607 462 Pnt
4607 1708 Pnt
4570 1439 Pnt
4567 706 Pnt
4585 852 Pnt
4564 406 Pnt
4646 1182 Pnt
4602 1017 Pnt
4584 1691 Pnt
4602 712 Pnt
4634 1251 Pnt
4603 645 Pnt
4623 1398 Pnt
4602 640 Pnt
4583 987 Pnt
4607 1044 Pnt
4621 658 Pnt
4647 1707 Pnt
4597 2438 Pnt
4597 447 Pnt
4627 1037 Pnt
4561 599 Pnt
4579 626 Pnt
4612 418 Pnt
4633 822 Pnt
4584 457 Pnt
4621 1836 Pnt
4640 1280 Pnt
4575 926 Pnt
4587 520 Pnt
4608 887 Pnt
4617 1073 Pnt
4627 1932 Pnt
4635 915 Pnt
4577 994 Pnt
4597 1050 Pnt
4618 704 Pnt
4640 1330 Pnt
4626 1071 Pnt
4600 1297 Pnt
4578 876 Pnt
4630 888 Pnt
4647 834 Pnt
4625 521 Pnt
4613 1409 Pnt
4616 1642 Pnt
4633 725 Pnt
4580 526 Pnt
4609 1050 Pnt
4634 429 Pnt
4625 657 Pnt
4644 1761 Pnt
4582 864 Pnt
4605 2402 Pnt
4570 588 Pnt
4640 2608 Pnt
4641 1902 Pnt
4590 1507 Pnt
4616 402 Pnt
4602 767 Pnt
4650 1005 Pnt
4650 728 Pnt
4561 864 Pnt
4612 1747 Pnt
4562 1656 Pnt
4632 862 Pnt
4565 633 Pnt
4645 609 Pnt
4606 1681 Pnt
4590 968 Pnt
4569 671 Pnt
4634 1123 Pnt
4569 1557 Pnt
4593 1268 Pnt
4622 436 Pnt
4628 934 Pnt
4647 585 Pnt
4571 1386 Pnt
4636 1196 Pnt
4570 566 Pnt
4605 1883 Pnt
4579 979 Pnt
5133 760 Pnt
5189 2063 Pnt
5172 760 Pnt
4612 979 Pnt
5155 2063 Pnt
5139 1510 Pnt
5206 436 Pnt
5169 991 Pnt
5189 433 Pnt
5196 2586 Pnt
5188 2746 Pnt
5184 619 Pnt
5169 733 Pnt
5160 607 Pnt
5132 464 Pnt
5169 947 Pnt
5189 677 Pnt
5220 450 Pnt
5206 2863 Pnt
5156 2151 Pnt
5152 953 Pnt
5145 1892 Pnt
5154 1352 Pnt
5219 1214 Pnt
5169 1685 Pnt
5204 1656 Pnt
5190 668 Pnt
5215 1473 Pnt
5185 474 Pnt
5134 1526 Pnt
5145 633 Pnt
5138 650 Pnt
5143 522 Pnt
5147 547 Pnt
5167 1236 Pnt
5152 1148 Pnt
5167 1163 Pnt
5145 1302 Pnt
5146 1273 Pnt
5218 649 Pnt
5205 2136 Pnt
5190 779 Pnt
5214 570 Pnt
5142 935 Pnt
5136 1413 Pnt
5187 805 Pnt
5158 936 Pnt
5182 1417 Pnt
5132 903 Pnt
5137 718 Pnt
5133 653 Pnt
5148 1039 Pnt
5154 729 Pnt
5131 615 Pnt
5193 1059 Pnt
5187 1602 Pnt
5197 892 Pnt
5132 1390 Pnt
5147 1062 Pnt
5132 1205 Pnt
5168 1204 Pnt
5206 1209 Pnt
5141 1295 Pnt
5192 1655 Pnt
5136 992 Pnt
5218 1692 Pnt
5156 634 Pnt
5131 1346 Pnt
5149 1144 Pnt
5214 1842 Pnt
5159 581 Pnt
5145 735 Pnt
5133 2189 Pnt
5183 1314 Pnt
5154 2297 Pnt
5147 429 Pnt
5142 1189 Pnt
5151 467 Pnt
5147 2370 Pnt
5207 745 Pnt
5210 1167 Pnt
5189 525 Pnt
5138 525 Pnt
5161 1485 Pnt
5179 839 Pnt
5155 1592 Pnt
5220 1111 Pnt
5193 540 Pnt
5195 1065 Pnt
5184 974 Pnt
5197 1176 Pnt
5164 1130 Pnt
5135 658 Pnt
5164 1286 Pnt
5157 482 Pnt
5146 718 Pnt
5141 1473 Pnt
5214 730 Pnt
5183 864 Pnt
5130 1352 Pnt
5182 1044 Pnt
5143 439 Pnt
5216 418 Pnt
5728 1000 Pnt
5746 2482 Pnt
5754 1801 Pnt
5742 2001 Pnt
5718 1072 Pnt
5742 2941 Pnt
5744 1083 Pnt
5715 2197 Pnt
5748 493 Pnt
5728 457 Pnt
5740 420 Pnt
5756 1265 Pnt
5787 855 Pnt
5738 940 Pnt
5773 705 Pnt
5774 2225 Pnt
5760 1367 Pnt
5734 2346 Pnt
5753 1068 Pnt
5762 1283 Pnt
5740 1056 Pnt
5725 1143 Pnt
5731 1881 Pnt
5785 516 Pnt
5743 1572 Pnt
5727 1294 Pnt
5745 410 Pnt
5719 490 Pnt
5730 562 Pnt
5751 522 Pnt
5708 635 Pnt
5786 451 Pnt
5751 1370 Pnt
5780 517 Pnt
5728 1913 Pnt
5786 550 Pnt
5704 607 Pnt
5731 512 Pnt
5701 1317 Pnt
5783 1164 Pnt
5775 563 Pnt
5741 1259 Pnt
5755 1540 Pnt
5779 881 Pnt
5723 1821 Pnt
5773 682 Pnt
5786 443 Pnt
5763 864 Pnt
5746 887 Pnt
5772 2818 Pnt
5766 613 Pnt
5735 1811 Pnt
5728 1238 Pnt
5728 1077 Pnt
5764 1338 Pnt
5748 782 Pnt
5722 401 Pnt
5788 1131 Pnt
5717 1433 Pnt
5783 1976 Pnt
5715 2014 Pnt
5728 926 Pnt
5765 1884 Pnt
5730 491 Pnt
5747 640 Pnt
5759 827 Pnt
5714 1286 Pnt
5730 737 Pnt
5763 926 Pnt
5702 2750 Pnt
5756 1362 Pnt
5749 1380 Pnt
5790 1095 Pnt
5761 3249 Pnt
5774 969 Pnt
5733 4231 Pnt
5725 1208 Pnt
5739 3445 Pnt
5706 721 Pnt
5734 854 Pnt
5765 3180 Pnt
5756 2144 Pnt
5746 1712 Pnt
5763 2385 Pnt
5722 1869 Pnt
5759 915 Pnt
5722 1134 Pnt
5730 2191 Pnt
5712 1301 Pnt
5762 1101 Pnt
5736 957 Pnt
5773 1310 Pnt
5755 866 Pnt
5780 1373 Pnt
5754 1198 Pnt
5709 434 Pnt
5716 1312 Pnt
5732 1069 Pnt
5782 1569 Pnt
5706 714 Pnt
6311 958 Pnt
6350 2556 Pnt
6278 4600 Pnt
6352 1624 Pnt
6323 1028 Pnt
6287 1898 Pnt
6355 645 Pnt
6277 1771 Pnt
6293 1540 Pnt
6295 1512 Pnt
6281 1025 Pnt
6270 770 Pnt
6331 828 Pnt
6295 941 Pnt
6330 770 Pnt
6359 508 Pnt
6331 1765 Pnt
6320 2415 Pnt
6316 1545 Pnt
6281 751 Pnt
6310 2268 Pnt
6332 898 Pnt
6359 704 Pnt
6290 898 Pnt
6278 1032 Pnt
6274 647 Pnt
6337 978 Pnt
6307 1008 Pnt
6295 1100 Pnt
6287 1083 Pnt
6300 1397 Pnt
6345 613 Pnt
6338 637 Pnt
6271 674 Pnt
6310 1566 Pnt
6324 787 Pnt
6272 946 Pnt
6273 4172 Pnt
6324 1494 Pnt
6301 1158 Pnt
6295 1043 Pnt
6282 984 Pnt
6273 417 Pnt
6322 723 Pnt
6345 2035 Pnt
6329 545 Pnt
6342 757 Pnt
6338 690 Pnt
6328 734 Pnt
6327 1713 Pnt
6294 3016 Pnt
6356 444 Pnt
6293 1228 Pnt
6345 1437 Pnt
6300 1161 Pnt
6308 2004 Pnt
6315 2179 Pnt
6357 1594 Pnt
6289 2219 Pnt
6329 2314 Pnt
6313 1722 Pnt
6330 1284 Pnt
6356 3273 Pnt
6287 553 Pnt
6330 655 Pnt
6323 755 Pnt
6270 1916 Pnt
6304 509 Pnt
6278 3016 Pnt
6283 444 Pnt
6331 1228 Pnt
6270 1437 Pnt
6343 1161 Pnt
6311 2004 Pnt
6335 2179 Pnt
6293 1594 Pnt
6332 2219 Pnt
6332 2314 Pnt
6295 1722 Pnt
6271 1284 Pnt
6313 3273 Pnt
6300 553 Pnt
6354 655 Pnt
6334 755 Pnt
6296 1916 Pnt
6320 509 Pnt
6288 964 Pnt
6331 2805 Pnt
6277 706 Pnt
6303 3414 Pnt
6337 1936 Pnt
6318 2090 Pnt
6309 1165 Pnt
6321 3480 Pnt
6355 1345 Pnt
6319 3063 Pnt
6272 950 Pnt
6309 806 Pnt
6352 1706 Pnt
6354 1413 Pnt
6306 2284 Pnt
6360 1028 Pnt
6310 1305 Pnt
6355 1233 Pnt
6276 2898 Pnt
6299 709 Pnt
6316 637 Pnt
6345 2498 Pnt
6280 1132 Pnt
6343 1045 Pnt
6302 421 Pnt
6330 2323 Pnt
6269 1951 Pnt
6308 477 Pnt
6317 1366 Pnt
6348 1718 Pnt
6319 1385 Pnt
6344 1254 Pnt
% End plot #1
1.000 UL
LTb
1140 4799 N
0 -4399 V
5699 0 V
0 4399 V
-5699 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
