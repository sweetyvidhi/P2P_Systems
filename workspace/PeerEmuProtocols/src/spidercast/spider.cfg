CYCLON_VIEW              20
CYCLON_GOSSIP            10
VIC_VIEW                 15
VIC_GOSSIP               10
ORACLE                   1

NODES                    1050
CYCLE                    1000
CYCLES                   1000


random.seed              0
simulation.endtime       CYCLE * CYCLES
network.size             NODES


network.node			spidercast.protocol.SpiderCastNode
{
 kg					0
 kr					3
 NUM_TOPICS			100
 USE_TWITTER		true
 file				randomsubset_1000.txt
}

#debug.config full

################
# INITIALIZERS #
################

#include.init             cd_oracle, cd_vicinity, topology_vicinity, target
include.init             topology_cyclon, cd_cyclon, cd_spidercast, topology_spidercast
#include.init             topology_cyclon, cd_cyclon

init.topology_cyclon     peeremu.dynamics.WireKOut
{
  protocol               cyclon
  k                      CYCLON_VIEW
}

init.topology_spidercast   peeremu.dynamics.WireKOut
{
  protocol               spidercast
  k                      5
}


init.cd_cyclon           peeremu.edsim.CDScheduler
{
  protocol               cyclon
  randstart
}


init.cd_oracle           peeremu.edsim.CDScheduler
{
  protocol               oracle
}


init.cd_spidercast         peeremu.edsim.CDScheduler
{
  protocol               spidercast
  randstart
}



init.target              gossip.vicinity.TargetOverlay
{
  k                      K
  p                      P
  sight                  SIGHT
}



#############
# PROTOCOLS #
#############

include.protocol         cyclon, trans, spidercast

protocol.cyclon          gossip.protocol.CyclonED
{
  descriptor             spidercast.descriptor.DescriptorSimTopics
  settings               gossip.protocol.CyclonSettings

  select                 gossip.comparator.AgeDescending
  duplicate              gossip.comparator.AgeAscending
  #keep                  --> IRRELEVANT
  #send                  --> IRRELEVANT

  view                   CYCLON_VIEW
  gossip                 CYCLON_GOSSIP
  step                   CYCLE

  transport              trans
}





protocol.spidercast        spidercast.protocol.VicinitySC
{
  linkable               cyclon
  descriptor             spidercast.descriptor.DescriptorSimTopics
  settings               spidercast.protocol.VicinitySettingsSC

  sendLinkableItems      false

  view                   VIC_VIEW
  gossip                 VIC_GOSSIP
  step                   CYCLE

  transport              trans
}



protocol.trans           peeremu.transport.UniformRandomTransport
{
  mindelay               0
  maxdelay               0
}



###################
#    OBSERVERS    #
###################

include.control          clusters,

control.ball             peeremu.reports.BallExpansion
{
  protocol               spidercast
  n                      1000
  method				 stats
}



control.degree          peeremu.reports.DegreeStats
{
  protocol              spidercast
  step                  CYCLE
  #at                    1000
  undir
  method                stats
  #FINAL
}

control.coverage          spidercast.protocol.CoverageObserver
{
  protocol              spidercast
  step                  CYCLE
}

control.clusters          spidercast.descriptor.GenericTopicConnectivityObserver
{
  protocol              spidercast
  step                  CYCLE
  #at                    1000
  undir
  method                stats
  type					wcc
  #FINAL
}



control.target          gossip.vicinity.TargetOverlayObserver
{
  protocol              spidercast
  step                  CYCLE
}
